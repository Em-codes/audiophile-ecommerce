import Vuex from 'vuex'
import axios from 'axios'

const createStore = () => {
  return new Vuex.Store({
    state: {
      products: []
    },

    mutations: {
     SET_PRODUCTS (state, products) {
       state.products = products
     }
    },
    
    getters: {

    },

    actions: {
      getProducts ({ commit }) {
      axios.get('./db.json/')
      .then(response => {
          commit('SET_PRODUCTS', response.data)
          console.log(response.data)
      })
      .catch(error => console.log(error))
    }
  },

 })
}
export default createStore


this.cart = ({
    id:this.id,
    image:this.product.image,
    cart_name:this.product.cart_name,
    unit_price:this.product.unit_price
})
this.carts.push(this.cart);
localStorage.setItem('carts', JSON.stringify(this.carts))










 // single_invoice: state => invoice => {
    //   //  state.invoices.find(i => i.id === invoice.id);

    //    return state.invoices = JSON.parse(localStorage.getItem('invoices'))
    //     // else return null
    // },

    invoiceTotal: state => {
      // const mInvoice = state.invoices.find(i => i.id === invoice.id)

      // if(mInvoice) { 
      //   let total = state.invoice.addItems.reduce((sum, item) => sum + item.price * item.quantity, 0);
      //   let myTotal = total.toLocaleString(undefined, {minimumFractionDigits: 2})
      //   return myTotal
      
      // }
      //   else return null
      return 3

      
     },

     if(this.invoice.hasOwnProperty("addItems")) {
        let total = this.invoice.addItems.reduce((sum, item) => sum + item.price * item.quantity, 0);
          let myTotal = total.toLocaleString(undefined, {minimumFractionDigits: 2})
            return myTotal
        }
